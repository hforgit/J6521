C51 COMPILER V9.01   XY_APL_LOGIC                                                          03/23/2021 15:29:59 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XY_APL_LOGIC
OBJECT MODULE PLACED IN .\Objects\xy_apl_logic.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE 01_APL\xy_apl_logic.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\01_APL;.
                    -\02_FML;.\03_HAL;.\04_SYS) DEBUG PRINT(.\Listings\xy_apl_logic.lst) OBJECT(.\Objects\xy_apl_logic.obj)

line level    source

   1          #include "xy_sys_headfile.h"
   2          
   3          static datall* s_p_data = &g_datall;
   4          
   5          /*********************************************************************************************************
             -**************
   6          * Function Name: 
   7          * Description  : 
   8          * Arguments    : None
   9          * Return Value : None
  10          **********************************************************************************************************
             -*************/
  11          void apl_init_data(void)
  12          {
  13   1              fml_buzzer_init_data(s_p_data);
  14   1              fml_ctrl_init_data(s_p_data);
  15   1              fml_touch_init_data(s_p_data);
  16   1              fml_motor_init_data(s_p_data);
  17   1      }
  18          
  19          /*********************************************************************************************************
             -**************
  20          * Function Name: 
  21          * Description  : 
  22          * Arguments    : None
  23          * Return Value : None
  24          **********************************************************************************************************
             -*************/
  25          void apl_config_data(void)
  26          {
  27   1              s_p_data->buzzer.normal_bee_on  = ON; 
  28   1              s_p_data->keytype                       = REMOTE;
  29   1              memset(&g_timebase.isTrigInterrupt, 0, sizeof(g_timebase));
  30   1      }
  31          
  32          /*********************************************************************************************************
             -**************
  33          * Function Name: 
  34          * Description  : 
  35          * Arguments    : None
  36          * Return Value : None
  37          **********************************************************************************************************
             -*************/
  38          void apl_config_register(void)
  39          {
  40   1              fml_ctrl_init_reg();
  41   1      }
  42          
  43          /*********************************************************************************************************
             -**************
  44          * Function Name: 
  45          * Description  : 
  46          * Arguments    : None
  47          * Return Value : None
C51 COMPILER V9.01   XY_APL_LOGIC                                                          03/23/2021 15:29:59 PAGE 2   

  48          **********************************************************************************************************
             -*************/
  49          void apl_initialize(void)
  50          {
  51   1              apl_init_data();
  52   1              apl_config_data();
  53   1              apl_config_register();
  54   1      }
  55          
  56          /*********************************************************************************************************
             -**************
  57          * Function Name: 
  58          * Description  : 
  59          * Arguments    : None
  60          * Return Value : None
  61          **********************************************************************************************************
             -*************/
  62          void apl_logic_ctrl(void)
  63          {
  64   1              /* period: 125us */
  65   1              if (g_timebase.isTrigInterrupt)
  66   1          {
  67   2                      g_timebase.isTrigInterrupt = 0;
  68   2                      g_timebase.timebase_125us++;
  69   2      
  70   2          }
  71   1      
  72   1              /* period: 1ms */
  73   1          if (g_timebase.timebase_125us >= 8)
  74   1          {
  75   2              g_timebase.timebase_125us = 0;
  76   2                      g_timebase.timebase_1ms++;
  77   2      
  78   2                      fml_buzzer_timer_cnt(s_p_data);
  79   2                      fml_motor_timer_ctrl(s_p_data);
  80   2                      fml_motor_ctrl_move(s_p_data);
  81   2      
  82   2                      hal_irq_uart1_send(s_p_data->uart.send_uart1_dat,s_p_data->uart.send_uart1_len);
  83   2              }
  84   1      
  85   1              /* period: 10ms */
  86   1          if (g_timebase.timebase_1ms >= 10)
  87   1          {
  88   2              g_timebase.timebase_1ms = 0;
  89   2              g_timebase.timebase_10ms++;
  90   2              g_timebase.timebase_250ms++;
  91   2      
  92   2                      fml_ctrl_key_logic(s_p_data);
  93   2                      fml_touch_ctrl_logic(s_p_data);
  94   2          }
  95   1      
  96   1              /* period: 50ms */
  97   1          if (g_timebase.timebase_10ms >= 5)
  98   1          {
  99   2                      g_timebase.timebase_10ms = 0;
 100   2                      g_timebase.timebase_100ms++;
 101   2      
 102   2                      fml_buzzer_deal(s_p_data);
 103   2          }
 104   1      
 105   1              /* period: 100ms */
 106   1          if (g_timebase.timebase_100ms >= 2)
C51 COMPILER V9.01   XY_APL_LOGIC                                                          03/23/2021 15:29:59 PAGE 3   

 107   1          {
 108   2              g_timebase.timebase_100ms = 0;
 109   2      
 110   2                      fml_ctrl_icon_display(s_p_data);
 111   2          }
 112   1      
 113   1              /* period: 250ms */
 114   1          if (g_timebase.timebase_250ms >= 24)
 115   1          {
 116   2              g_timebase.timebase_250ms = 0;
 117   2                      g_timebase.timebase_500ms++;
 118   2      
 119   2                      fml_relay_ctrl(s_p_data);
 120   2                      fml_display_conf_symbol(s_p_data);
 121   2                      fml_display_tx_data(s_p_data);
 122   2                      watchdog();     
 123   2          }
 124   1      
 125   1              /* period: 500ms */
 126   1          if (g_timebase.timebase_500ms >= 2)
 127   1          {
 128   2              g_timebase.timebase_500ms = 0;
 129   2              g_timebase.timebase_1s++;
 130   2      
 131   2                      #ifdef XY_SYS_TEST_MODE
 132   2                              s_p_data->testmode = fml_test_check();
 133   2                              fml_test_logic(s_p_data);
 134   2                      #endif
 135   2          }
 136   1      
 137   1              /* period: 1s */
 138   1          if (g_timebase.timebase_1s >= 2)
 139   1          {
 140   2              g_timebase.timebase_1s = 0;
 141   2      
 142   2                      fml_ctrl_deal_timer(s_p_data);
 143   2                      fml_ctrl_work_time(s_p_data);
 144   2                      fml_ctrl_deal_alarm(s_p_data);
 145   2          }
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    478    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
