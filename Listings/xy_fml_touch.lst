C51 COMPILER V9.01   XY_FML_TOUCH                                                          03/04/2021 15:08:22 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XY_FML_TOUCH
OBJECT MODULE PLACED IN .\Objects\xy_fml_touch.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE 02_FML\xy_fml_touch.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\01_APL;.
                    -\02_FML;.\03_HAL;.\04_SYS) DEBUG PRINT(.\Listings\xy_fml_touch.lst) OBJECT(.\Objects\xy_fml_touch.obj)

line level    source

   1          #include "xy_sys_headfile.h"
   2          
   3          /*********************************************************************************************************
             -**************
   4          * Function Name: 
   5          * Description  : 
   6          * Arguments    : None
   7          * Return Value : None
   8          **********************************************************************************************************
             -*************/
   9          void fml_touch_init_data(datall* p_data)
  10          {
  11   1              p_data->touch.current.dat               = 0;
  12   1      }
  13          
  14          /*********************************************************************************************************
             -**************
  15          * Function Name: 
  16          * Description  : 
  17          * Arguments    : None
  18          * Return Value : None
  19          **********************************************************************************************************
             -*************/
  20          void fml_touch_recv_data(datall* p_data)
  21          {
  22   1              unsigned char           i;
  23   1              unsigned char           temp_sum = 0;
  24   1              unsigned char           buffer[sizeof(p_data->uart.rec_uart0_dat)] = {0};
  25   1              static datacommon       s_data;
  26   1              
  27   1              if(p_data->uart.rec_uart0_ok)
  28   1              {
  29   2                      p_data->uart.rec_uart0_ok = 0;
  30   2      
  31   2                      memcpy(buffer, p_data->uart.rec_uart0_dat, sizeof(buffer));
  32   2                      memset(p_data->uart.rec_uart0_dat, 0, sizeof(buffer));
  33   2      
  34   2                      for(i=0; i<4; i++)
  35   2                      {
  36   3                              temp_sum += buffer[i];
  37   3                      }
  38   2                      
  39   2                      if(temp_sum == buffer[i])                       ///< check data 
  40   2                      {
  41   3                              s_data.dat = buffer[1] + (buffer[2] << 8);
  42   3                              if(s_data.dat != p_data->touch.current.dat)
  43   3                              {
  44   4                                      if(REMOTE == p_data->keytype)
  45   4                                      {
  46   5                                              memset(&p_data->remote, 0, sizeof(p_data->remote));
  47   5                                              p_data->keytype = TOUCH;
  48   5                                      }
  49   4                                      
  50   4                                      p_data->touch.current.dat = s_data.dat;
C51 COMPILER V9.01   XY_FML_TOUCH                                                          03/04/2021 15:08:22 PAGE 2   

  51   4                              }
  52   3                      }
  53   2              }
  54   1      }
  55          
  56          /*********************************************************************************************************
             -**************
  57          * Function Name: 
  58          * Description  : 
  59          * Arguments    : None
  60          * Return Value : None
  61          **********************************************************************************************************
             -*************/
  62          void fml_touch_deal_disp(displaycontent* p_disp)
  63          {
  64   1              if(TOUCH_SYMBOL_BLOW)
  65   1              {
  66   2                      p_disp->disp_icon_blow = SYM_BLOW_ON;
  67   2              }
  68   1              else
  69   1              {
  70   2                      p_disp->disp_icon_blow = SYM_BLOW_OFF;
  71   2              }
  72   1      
  73   1              if(TOUCH_SYMBOL_ABSORB)
  74   1              {
  75   2                      p_disp->disp_icon_absorb = SYM_ABSORB_ON;
  76   2              }
  77   1              else
  78   1              {
  79   2                      p_disp->disp_icon_absorb = SYM_ABSORB_OFF;
  80   2              }
  81   1      
  82   1              if(TOUCH_SYMBOL_WARM)
  83   1              {
  84   2                      p_disp->disp_icon_warm = SYM_WARM_ON;
  85   2              }
  86   1              else
  87   1              {
  88   2                      p_disp->disp_icon_warm = SYM_WARM_OFF;
  89   2              }
  90   1      }
  91          
  92          /*********************************************************************************************************
             -**************
  93          * Function Name: 
  94          * Description  : 
  95          * Arguments    : None
  96          * Return Value : None
  97          **********************************************************************************************************
             -*************/
  98          void fml_touch_deal_relay(normalctrol* p_ctrl)
  99          {
 100   1              if(TOUCH_RELAY_LIGHT)
 101   1              {
 102   2                      p_ctrl->keystate_light = ON;
 103   2              }
 104   1              else
 105   1              {
 106   2                      p_ctrl->keystate_light = OFF;
 107   2              }
 108   1      
C51 COMPILER V9.01   XY_FML_TOUCH                                                          03/04/2021 15:08:22 PAGE 3   

 109   1              if(TOUCH_RELAY_PTC)
 110   1              {
 111   2                      p_ctrl->keystate_ptc = ON;
 112   2              }
 113   1              else
 114   1              {
 115   2                      p_ctrl->keystate_ptc = OFF;
 116   2              }
 117   1      
 118   1              if(TOUCH_RELAY_FAN_BLOW)
 119   1              {
 120   2                      p_ctrl->keystate_fan_blow = ON;
 121   2              }
 122   1              else
 123   1              {
 124   2                      p_ctrl->keystate_fan_blow = OFF;
 125   2              }
 126   1      
 127   1              if(TOUCH_RELAY_FAN_ABSORB)
 128   1              {
 129   2                      p_ctrl->keystate_fan_absorb = ON;
 130   2              }
 131   1              else
 132   1              {
 133   2                      p_ctrl->keystate_fan_absorb = OFF;
 134   2              }
 135   1      }
 136          
 137          /*********************************************************************************************************
             -**************
 138          * Function Name: 
 139          * Description  : 
 140          * Arguments    : None
 141          * Return Value : None
 142          **********************************************************************************************************
             -*************/
 143          void fml_touch_deal_motor(motorcontrol* p_motor)
 144          {
 145   1              if(TOUCH_RELAY_MOTOR_BLOW)
 146   1              {
 147   2                      if(RESET_STEP_ZERO  == p_motor->blow_target_step)
 148   2                      {
 149   3                              p_motor->blow_target_step = TARGET_STEP_BLOW;
 150   3                              //p_motor->blow_target_step_pri = TARGET_STEP_BLOW;
 151   3                      }
 152   2              }
 153   1              else
 154   1              {
 155   2                      p_motor->blow_target_step = RESET_STEP_ZERO;
 156   2                      //p_motor->blow_target_step_pri = RESET_STEP_ZERO;
 157   2              }
 158   1                      if(TOUCH_RELAY_MOTOR_ABSORB)
 159   1                      {
 160   2                              if(RESET_STEP_ZERO == p_motor->absorb_target_step)
 161   2                              {
 162   3                                      p_motor->absorb_target_step = TARGET_STEP_ABSORB;
 163   3                              }
 164   2                      }
 165   1                      else
 166   1                      {
 167   2                              p_motor->absorb_target_step = RESET_STEP_ZERO;
 168   2                      }
C51 COMPILER V9.01   XY_FML_TOUCH                                                          03/04/2021 15:08:22 PAGE 4   

 169   1      }
 170          
 171          /*********************************************************************************************************
             -**************
 172          * Function Name: 
 173          * Description  : 
 174          * Arguments    : None
 175          * Return Value : None
 176          **********************************************************************************************************
             -*************/
 177          void fml_touch_deal_swing(datall* p_data)
 178          {
 179   1              if(TOUCH_RELAY_SWING_BLOW)
 180   1              {
 181   2                      p_data->remote.keyctrl.keystate_open_swing = ON;
 182   2                      
 183   2                      if(TARGET_LOW_SWING == p_data->motor.blow_motor_step)
 184   2                      {
 185   3                              p_data->motor.blow_target_step = TARGET_HIGH_SWING;
 186   3                              p_data->motor.blow_target_step_pri = p_data->motor.blow_target_step;
 187   3                      }
 188   2                      else if(TARGET_HIGH_SWING == p_data->motor.blow_motor_step)
 189   2                      {
 190   3                              p_data->motor.blow_target_step = TARGET_LOW_SWING;
 191   3                              p_data->motor.blow_target_step_pri = p_data->motor.blow_target_step;
 192   3                      }
 193   2                      else
 194   2                      {
 195   3                              if(p_data->motor.blow_target_step == p_data->motor.blow_motor_step)
 196   3                              {
 197   4                                      p_data->motor.blow_target_step = p_data->motor.blow_target_step_pri;
 198   4                              }
 199   3                      }
 200   2              }
 201   1              else
 202   1              {
 203   2                      if(ON == p_data->remote.keyctrl.keystate_open_swing)
 204   2                      {
 205   3                              p_data->motor.blow_target_step = p_data->motor.blow_motor_step;
 206   3                      }
 207   2                      p_data->remote.keyctrl.keystate_open_swing = OFF;
 208   2              }
 209   1      }
 210          
 211          /*********************************************************************************************************
             -**************
 212          * Function Name: 
 213          * Description  : 
 214          * Arguments    : None
 215          * Return Value : None
 216          **********************************************************************************************************
             -*************/
 217          void fml_touch_ctrl_logic(datall* p_data)
 218          {
 219   1              #ifdef XY_SYS_TEST_MODE
 220   1                      if(YES == p_data->testmode)
 221   1                              return;
 222   1              #endif
 223   1      
 224   1              fml_touch_recv_data(p_data);
 225   1              
 226   1              if(TOUCH != p_data->keytype)
C51 COMPILER V9.01   XY_FML_TOUCH                                                          03/04/2021 15:08:22 PAGE 5   

 227   1                      return;
 228   1              
 229   1              fml_touch_deal_disp(&p_data->display);
 230   1              fml_touch_deal_relay(&p_data->remote.keyctrl);
 231   1              fml_touch_deal_motor(&p_data->motor);
 232   1              fml_touch_deal_swing(p_data);
 233   1      }
 234          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    810    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =      2      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
