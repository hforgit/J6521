C51 COMPILER V9.01   XY_HAL_TIMER                                                          03/18/2021 14:17:25 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XY_HAL_TIMER
OBJECT MODULE PLACED IN .\Objects\xy_hal_timer.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE 03_HAL\xy_hal_timer.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\01_APL;.
                    -\02_FML;.\03_HAL;.\04_SYS) DEBUG PRINT(.\Listings\xy_hal_timer.lst) OBJECT(.\Objects\xy_hal_timer.obj)

line level    source

   1          #include "xy_sys_headfile.h"
   2          
   3          /*********************************************************************************************************
             -**************
   4          * Function Name: 
   5          * Description  : 
   6          * Arguments    : None
   7          * Return Value : None
   8          **********************************************************************************************************
             -*************/
   9          void hal_timer_Init(void)
  10          {
  11   1              TMCON |= 0X05;
  12   1              /*      TIMER0  */
  13   1              TMOD |= 0x01;     
  14   1              TH0 = 0xF8;     //F8
  15   1              TL0 = 0x90;     //30
  16   1              TR0 = 0;
  17   1              ET0 = 1;
  18   1              TR0 = 1;
  19   1      
  20   1              /*      TIMER2  */
  21   1              RCAP2H=0xfc;     //溢出时间：时钟为Fsys，则12000*（1/Fsys）=0.5ms;
  22   1              RCAP2L=0xbe;     // 7E   7D - 81
  23   1              TR2 = 0;
  24   1              ET2 = 1;//定时器2允许
  25   1              TR2 = 1;
  26   1              IPT2 = 1;       
  27   1              /*      WDT */
  28   1              OPINX |= 0XC1;
  29   1              OPREG |= 0X82;
  30   1              WDTCON |= 0X10;
  31   1      }
  32          /*********************************************************************************************************
             -**************
  33          * Function Name: 
  34          * Description  : 
  35          * Arguments    : None
  36          * Return Value : None
  37          **********************************************************************************************************
             -*************/
  38          void hal_timer_buzzer(buzzercontrol* p_bee)
  39          {       
  40   1              if(ON == p_bee->bee_state)
  41   1              {
  42   2                      p_bee->bee_count++;
  43   2                      if(p_bee->bee_count<=1)                         
  44   2                      {
  45   3                              bee_on();
  46   3                      }
  47   2                      else
  48   2                      {
  49   3                              p_bee->bee_count=0;
  50   3                              bee_off();
C51 COMPILER V9.01   XY_HAL_TIMER                                                          03/18/2021 14:17:25 PAGE 2   

  51   3                      }
  52   2              }
  53   1              else
  54   1              {
  55   2                      p_bee->bee_count=0;
  56   2                      bee_off();
  57   2              }
  58   1      
  59   1      }
  60          /*********************************************************************************************************
             -**************
  61          * Function Name:
  62          * Description  : 1ms
  63          * Arguments    : None
  64          * Return Value : None
  65          **********************************************************************************************************
             -*************/
  66          void hal_timer_motor_blow(motorcontrol* p_motor)
  67          {
  68   1              p_motor->blow_motor_step_delay_count++;
  69   1      
  70   1              if(p_motor->blow_motor_step_delay_count>=4)
  71   1              {
  72   2                      p_motor->blow_motor_step_delay_count=4;
  73   2                      p_motor->blow_motor_step_delay_flag=1;
  74   2              }
  75   1      }
  76          
  77          /*********************************************************************************************************
             -**************
  78          * Function Name: 
  79          * Description  : 
  80          * Arguments    : None
  81          * Return Value : None
  82          **********************************************************************************************************
             -*************/
  83          void hal_timer_mode_deal(workmoduleflag* p_mode)
  84          {
  85   1              if(SET == p_mode->flag_workdelay_10s)                           
  86   1              {
  87   2                      p_mode->workdelay_10s++;
  88   2                      if(p_mode->workdelay_10s >= CLOCK_DELAYTIMER_10S)
  89   2                      {
  90   3                              p_mode->workdelay_10s = CLOCK_DELAYTIMER_10S;
  91   3                      }
  92   2              }
  93   1              else
  94   1              {
  95   2                      p_mode->workdelay_10s = CLOCK_DELAYTIMER_0S;
  96   2              }
  97   1              if(SET == p_mode->flag_workdelay_1s)
  98   1              {
  99   2                      p_mode->workdelay_1s++;
 100   2                      if(p_mode->workdelay_1s >= CLOCK_DELAYTIMER_1S)
 101   2                      {
 102   3                              p_mode->workdelay_1s = CLOCK_DELAYTIMER_1S;
 103   3                      }
 104   2              }
 105   1              else
 106   1              {
 107   2                      p_mode->workdelay_1s = CLOCK_DELAYTIMER_0S;
 108   2              }
C51 COMPILER V9.01   XY_HAL_TIMER                                                          03/18/2021 14:17:25 PAGE 3   

 109   1      
 110   1              p_mode->workdelay_cyc++;
 111   1              if(p_mode->workdelay_cyc >= CLOCK_DELAYTIMER_CYC)
 112   1              {
 113   2                      p_mode->workdelay_cyc = CLOCK_DELAYTIMER_0S;
 114   2              }
 115   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    224    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
