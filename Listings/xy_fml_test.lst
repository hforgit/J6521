C51 COMPILER V9.01   XY_FML_TEST                                                           03/12/2021 09:41:54 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XY_FML_TEST
OBJECT MODULE PLACED IN .\Objects\xy_fml_test.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE 02_FML\xy_fml_test.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\01_APL;.\
                    -02_FML;.\03_HAL;.\04_SYS) DEBUG PRINT(.\Listings\xy_fml_test.lst) OBJECT(.\Objects\xy_fml_test.obj)

line level    source

   1          #include "xy_sys_headfile.h"
   2          
   3          static unsigned char  errcod;
   4          
   5          /*********************************************************************************************************
             -**************
   6          * Function Name: 
   7          * Description  : 
   8          * Arguments    : None
   9          * Return Value : None
  10          **********************************************************************************************************
             -*************/
  11          void fml_test_old_dis(unsigned char* table)
  12          {
  13   1              static unsigned char s_bit = 0; 
  14   1      
  15   1              table[0] = 0x68;
  16   1              table[1] = 0x02;
  17   1              switch(errcod)
  18   1              {
  19   2                      case 0:
  20   2                              if(s_bit == 0)
  21   2                              {
  22   3                                      table[2] = 0x07;
  23   3                                      table[3] = 0x7F;
  24   3                              }
  25   2                              else
  26   2                              {
  27   3                                      table[2] = s_bit <  4 ? 0x01 << (s_bit-1) : 0x00;
  28   3                                      table[3] = s_bit >= 4 ? 0x01 << (s_bit-4) : 0x00;
  29   3                              }
  30   2                              s_bit++;
  31   2                              if(s_bit > 10)
  32   2                                      s_bit = 0;
  33   2                              break;
  34   2                      case 1:
  35   2                              table[2] = 0x00;
  36   2                              table[3] = 0x5C;
  37   2                              break;
  38   2                      case 2:
  39   2                              table[2] = 0x00;
  40   2                              table[3] = 0x7C;
  41   2                              break;
  42   2                      case 3:
  43   2                              table[2] = 0x00;
  44   2                              table[3] = 0x58;
  45   2                              break;
  46   2                      case 4:
  47   2                              table[2] = 0x07;
  48   2                              table[3] = 0x7F;
  49   2                              s_bit = 0;
  50   2                              break;
  51   2                      default:
  52   2                              table[2] = 0x00;
C51 COMPILER V9.01   XY_FML_TEST                                                           03/12/2021 09:41:54 PAGE 2   

  53   2                              table[3] = 0x00;
  54   2                              break;
  55   2              }
  56   1              table[4] = table[0] + table[1] + table[2] + table[3];
  57   1              table[5] = 0x16;        
  58   1      }
  59          
  60          /*********************************************************************************************************
             -**************
  61          * Function Name: 
  62          * Description  : 
  63          * Arguments    : None
  64          * Return Value : None
  65          **********************************************************************************************************
             -*************/
  66          void fml_test_new_dis(unsigned char* table)
  67          {
  68   1              static unsigned char s_bit = 0; 
  69   1              static unsigned char s_sequence = 0;
  70   1      
  71   1              table[0] = DISPLAY_DATA_HEAD_XY >> 8 & 0xFF;
  72   1              table[1] = DISPLAY_DATA_HEAD_XY & 0xFF;
  73   1              table[2] = DISPLAY_DATA_LENGTH;
  74   1              table[3] = DISPLAY_DATA_VERSION;
  75   1              table[4] = s_sequence;
  76   1              table[5] = DISPLAY_DATA_COMMAND;
  77   1              if(errcod)
  78   1              {
  79   2                      table[6] = 0x79;
  80   2                      table[7] = DISPLAY_TABLE_SEG(errcod);
  81   2                      table[8] = 0x00;
  82   2              }
  83   1              else
  84   1              {
  85   2                      if(s_bit == 0)
  86   2                      {
  87   3                              table[6] = 0xFF;
  88   3                              table[7] = 0xFF;
  89   3                              table[8] = 0x80;
  90   3                      }
  91   2                      else if(s_bit < 4)
  92   2                      {
  93   3                              table[6] = (s_bit == 1 ? 0x80 : 0x00);
  94   3                              table[7] = (s_bit == 2 ? 0x80 : 0x00);
  95   3                              table[8] = (s_bit == 3 ? 0x80 : 0x00);
  96   3                      }
  97   2                      else
  98   2                      {
  99   3                              table[6] = (0x01 << (s_bit - 4));
 100   3                              table[7] = (0x01 << (s_bit - 4));
 101   3                              table[8] = 0x00;
 102   3                      }
 103   2                      s_bit++;
 104   2                      if(s_bit > 10)
 105   2                              s_bit = 0;
 106   2              }
 107   1              table[9] = hal_alg_chk_crc8(table, 9);
 108   1              
 109   1              s_sequence++;
 110   1      }
 111          
 112          /*********************************************************************************************************
C51 COMPILER V9.01   XY_FML_TEST                                                           03/12/2021 09:41:54 PAGE 3   

             -**************
 113          * Function Name: 
 114          * Description  : 
 115          * Arguments    : None
 116          * Return Value : None
 117          **********************************************************************************************************
             -*************/
 118          void fml_test_uart(unsigned char mode)
 119          {
 120   1              static unsigned char s_table[16] = {0};
 121   1              static uartdata* p_test = &g_datall.uart;
 122   1      
 123   1              switch(mode)
 124   1              {
 125   2                      case 0:                         ///< old protocol
 126   2                              fml_test_old_dis(s_table);
 127   2                      
 128   2                              p_test->send_uart1_len = 6;
 129   2                              memcpy(p_test->send_uart1_dat,s_table,6);
 130   2                              p_test->send_data = 1;
 131   2      //                      hal_serial_uart_tx_display(s_table, 6);
 132   2                              break;
 133   2                      case 1:                         ///< new protocol
 134   2                              fml_test_new_dis(s_table);
 135   2                      
 136   2                              p_test->send_uart1_len = 10;
 137   2                              memcpy(p_test->send_uart1_dat,s_table,10);
 138   2                              p_test->send_data = 1;                          
 139   2      //                      hal_serial_uart_tx_display(s_table, 10);
 140   2                              break;
 141   2                      case 2:
 142   2                              fml_test_old_dis(s_table);
 143   2                              fml_test_new_dis(s_table+6);
 144   2                      
 145   2                              p_test->send_uart1_len = 16;
 146   2                              memcpy(p_test->send_uart1_dat,s_table,16);
 147   2                              p_test->send_data = 1;          
 148   2      //                      hal_serial_uart_tx_display(s_table, 16);
 149   2                              break;
 150   2                      default:
 151   2                              break;
 152   2              }
 153   1      }
 154          
 155          /*********************************************************************************************************
             -**************
 156          * Function Name: 
 157          * Description  : 
 158          * Arguments    : None
 159          * Return Value : None
 160          **********************************************************************************************************
             -*************/
 161          void fml_test_delay(void)
 162          {
 163   1              unsigned int i, j;
 164   1      
 165   1              for(i=0; i<100; i++)
 166   1              {       
 167   2                      for(j=0; j<1000; j++)
 168   2                      {
 169   3                              ;
 170   3                      }
C51 COMPILER V9.01   XY_FML_TEST                                                           03/12/2021 09:41:54 PAGE 4   

 171   2                      watchdog();
 172   2              }
 173   1              fml_test_uart(0);
 174   1              for(i=0; i<100; i++)
 175   1              {
 176   2                      for(j=0; j<1000; j++)
 177   2                      {
 178   3                              ;
 179   3                      }
 180   2                      watchdog();
 181   2              }
 182   1              fml_test_uart(1);
 183   1      }
 184          
 185          /*********************************************************************************************************
             -**************
 186          * Function Name: 
 187          * Description  : 
 188          * Arguments    : None
 189          * Return Value : None
 190          **********************************************************************************************************
             -*************/
 191          void fml_test_port(void)
 192          {
 193   1              /*1*/
 194   1              #ifdef TEST_FUNC_NUMB_01
 195   1              PTC_on();
 196   1              fml_test_delay();
 197   1              PTC_off();
 198   1              #endif
 199   1      
 200   1              /*4*/
 201   1              #ifdef TEST_FUNC_NUMB_04
 202   1              blow_fan_on();
 203   1              fml_test_delay();
 204   1              blow_fan_off();
 205   1              #endif
 206   1      
 207   1              /*5*/
 208   1              #ifdef TEST_FUNC_NUMB_05
 209   1              light_on();
 210   1              fml_test_delay();
 211   1              light_off();
 212   1              #endif
 213   1              
 214   1      }
 215          
 216          /*********************************************************************************************************
             -**************
 217          * Function Name: 
 218          * Description  : 
 219          * Arguments    : None
 220          * Return Value : None
 221          **********************************************************************************************************
             -*************/
 222          void fml_test_motor(void)
 223          {
 224   1              /*6*/
 225   1              #ifdef TEST_FUNC_NUMB_06
 226   1              blow_motor_step4_on();
 227   1              fml_test_delay();
 228   1              blow_motor_step4_off();
C51 COMPILER V9.01   XY_FML_TEST                                                           03/12/2021 09:41:54 PAGE 5   

 229   1              #endif
 230   1              
 231   1              /*7*/
 232   1              #ifdef TEST_FUNC_NUMB_07
 233   1              blow_motor_step3_on();
 234   1              fml_test_delay();
 235   1              blow_motor_step3_off();
 236   1              #endif
 237   1              
 238   1              /*8*/
 239   1              #ifdef TEST_FUNC_NUMB_08
 240   1              blow_motor_step2_on();
 241   1              fml_test_delay();
 242   1              blow_motor_step2_off();
 243   1              #endif
 244   1      
 245   1              /*9*/
 246   1              #ifdef TEST_FUNC_NUMB_09
 247   1              blow_motor_step1_on();
 248   1              fml_test_delay();
 249   1              blow_motor_step1_off();
 250   1              #endif
 251   1              
 252   1              /*10*/
 253   1              #ifdef TEST_FUNC_NUMB_10
 254   1              absorb_motor_step4_on();
 255   1              fml_test_delay();
 256   1              absorb_motor_step4_off();
 257   1              #endif
 258   1              
 259   1              /*11*/
 260   1              #ifdef TEST_FUNC_NUMB_11
 261   1              absorb_motor_step3_on();
 262   1              fml_test_delay();
 263   1              absorb_motor_step3_off();
 264   1              #endif
 265   1      
 266   1              /*12*/
 267   1              #ifdef TEST_FUNC_NUMB_12
 268   1              absorb_motor_step2_on();
 269   1              fml_test_delay();
 270   1              absorb_motor_step2_off();
 271   1              #endif
 272   1      
 273   1              /*13*/
 274   1              #ifdef TEST_FUNC_NUMB_13
 275   1              absorb_motor_step1_on();
 276   1              fml_test_delay();
 277   1              absorb_motor_step1_off();
 278   1              #endif
 279   1              
 280   1      }
 281          
 282          /*********************************************************************************************************
             -**************
 283          * Function Name: 
 284          * Description  : 
 285          * Arguments    : None
 286          * Return Value : None
 287          **********************************************************************************************************
             -*************/
 288          void fml_test_temp(datall* p_data)
C51 COMPILER V9.01   XY_FML_TEST                                                           03/12/2021 09:41:54 PAGE 6   

 289          {
 290   1              unsigned int timeout = 0;
 291   1              
 292   1              while(1)
 293   1              {
 294   2                      if(p_data->uart.rec_uart1_ok)
 295   2                      {
 296   3                              break;
 297   3                      }
 298   2                      timeout++;
 299   2                      if(timeout > 60000)
 300   2                      {
 301   3                              timeout = 60000;
 302   3                      }
 303   2                      watchdog();
 304   2              }
 305   1              if(p_data->temperature.value == 0)                      ///< short circuit
 306   1              {
 307   2                      errcod = 1;
 308   2              }
 309   1              else if(p_data->temperature.value > 80)         ///< cut circuit
 310   1              {
 311   2                      errcod = 2;
 312   2              }
 313   1              else if(timeout == 60000)                                       ///< lost uart from display
 314   1              {
 315   2                      errcod = 3;
 316   2              }
 317   1              else
 318   1              {
 319   2                      errcod = 0;
 320   2              }
 321   1      }
 322          
 323          /*********************************************************************************************************
             -**************
 324          * Function Name: 
 325          * Description  : 
 326          * Arguments    : None
 327          * Return Value : None
 328          **********************************************************************************************************
             -*************/
 329          void fml_test_init(void)
 330          {       
 331   1              blow_fan_off();
 332   1              light_off();
 333   1              absorb_fan_off();
 334   1              PTC_off();
 335   1      
 336   1              blow_motor_step1_off();
 337   1              blow_motor_step2_off();
 338   1              blow_motor_step3_off();
 339   1              blow_motor_step4_off();
 340   1              
 341   1              absorb_motor_step1_off();
 342   1              absorb_motor_step2_off();
 343   1              absorb_motor_step3_off();
 344   1              absorb_motor_step4_off();
 345   1      
 346   1      }
 347          
 348          /*********************************************************************************************************
C51 COMPILER V9.01   XY_FML_TEST                                                           03/12/2021 09:41:54 PAGE 7   

             -**************
 349          * Function Name: 
 350          * Description  : 
 351          * Arguments    : None
 352          * Return Value : None
 353          **********************************************************************************************************
             -*************/
 354          switchstate fml_test_check(void) 
 355          {
 356   1              static unsigned char s_count = 0;
 357   1              
 358   1              if(self_test() == 0)
 359   1              {
 360   2                      s_count++;
 361   2                      if(s_count > 1)
 362   2                      {
 363   3                              fml_test_init();
 364   3                              return YES;
 365   3                      }
 366   2              }
 367   1              else
 368   1              {
 369   2                      s_count = 0;
 370   2              }
 371   1              return NO;
 372   1      }
 373          
 374          /*********************************************************************************************************
             -**************
 375          * Function Name: 
 376          * Description  : 
 377          * Arguments    : None
 378          * Return Value : None
 379          **********************************************************************************************************
             -*************/
 380          void fml_test_logic(datall* p_data)
 381          {
 382   1              static unsigned char s_step = 0;
 383   1      
 384   1              if(YES == p_data->testmode)
 385   1              {
 386   2                      watchdog();
 387   2                      
 388   2                      switch(s_step)
 389   2                      {
 390   3                              case 0:
 391   3                                      s_step++;
 392   3                                      p_data->buzzer.burn_bee_on = ON;        
 393   3                                      fml_test_uart(2);
 394   3                                      break;
 395   3                              case 1:
 396   3                                      if(OFF == p_data->buzzer.burn_bee_on)   ///< start test beep
 397   3                                      {
 398   4                                              fml_test_port();                
 399   4                                              fml_test_motor();        
 400   4                                              s_step++;
 401   4                                      }                               
 402   3                                      break;
 403   3                              case 2:
 404   3                                      fml_test_temp(p_data);
 405   3                                      s_step = 0;
 406   3                                      break;
C51 COMPILER V9.01   XY_FML_TEST                                                           03/12/2021 09:41:54 PAGE 8   

 407   3                              default:
 408   3                                      break;
 409   3                      }
 410   2              }       
 411   1      }
 412          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1541    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     25      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
