C51 COMPILER V9.01   XY_FML_TEST                                                           03/15/2021 13:22:03 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XY_FML_TEST
OBJECT MODULE PLACED IN .\Objects\xy_fml_test.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE 02_FML\xy_fml_test.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\01_APL;.\
                    -02_FML;.\03_HAL;.\04_SYS) DEBUG PRINT(.\Listings\xy_fml_test.lst) OBJECT(.\Objects\xy_fml_test.obj)

line level    source

   1          #include "xy_sys_headfile.h"
   2          
   3          static unsigned char  errcod;
   4          
   5          /*********************************************************************************************************
             -**************
   6          * Function Name: 
   7          * Description  : 
   8          * Arguments    : None
   9          * Return Value : None
  10          **********************************************************************************************************
             -*************/
  11          void fml_test_old_dis(unsigned char* table)
  12          {
  13   1              static unsigned char s_bit = 0; 
  14   1      
  15   1              table[0] = 0x68;
  16   1              table[1] = 0x02;
  17   1              switch(errcod)
  18   1              {
  19   2                      case 0:
  20   2                              if(s_bit == 0)
  21   2                              {
  22   3                                      table[2] = 0x07;
  23   3                                      table[3] = 0x7F;
  24   3                              }
  25   2                              else
  26   2                              {
  27   3                                      table[2] = s_bit <  4 ? 0x01 << (s_bit-1) : 0x00;
  28   3                                      table[3] = s_bit >= 4 ? 0x01 << (s_bit-4) : 0x00;
  29   3                              }
  30   2                              s_bit++;
  31   2                              if(s_bit > 10)
  32   2                                      s_bit = 0;
  33   2                              break;
  34   2                      case 1:
  35   2                              table[2] = 0x00;
  36   2                              table[3] = 0x5C;
  37   2                              break;
  38   2                      case 2:
  39   2                              table[2] = 0x00;
  40   2                              table[3] = 0x7C;
  41   2                              break;
  42   2                      case 3:
  43   2                              table[2] = 0x00;
  44   2                              table[3] = 0x58;
  45   2                              break;
  46   2                      case 4:
  47   2                              table[2] = 0x07;
  48   2                              table[3] = 0x7F;
  49   2                              s_bit = 0;
  50   2                              break;
  51   2                      default:
  52   2                              table[2] = 0x00;
C51 COMPILER V9.01   XY_FML_TEST                                                           03/15/2021 13:22:03 PAGE 2   

  53   2                              table[3] = 0x00;
  54   2                              break;
  55   2              }
  56   1              table[4] = table[0] + table[1] + table[2] + table[3];
  57   1              table[5] = 0x16;        
  58   1      }
  59          
  60          /*********************************************************************************************************
             -**************
  61          * Function Name: 
  62          * Description  : 
  63          * Arguments    : None
  64          * Return Value : None
  65          **********************************************************************************************************
             -*************/
  66          void fml_test_new_dis(unsigned char* table)
  67          {
  68   1              static unsigned char s_bit = 0; 
  69   1              static unsigned char s_sequence = 0;
  70   1      
  71   1              table[0] = DISPLAY_DATA_HEAD_XY >> 8 & 0xFF;
  72   1              table[1] = DISPLAY_DATA_HEAD_XY & 0xFF;
  73   1              table[2] = DISPLAY_DATA_LENGTH;
  74   1              table[3] = DISPLAY_DATA_VERSION;
  75   1              table[4] = s_sequence;
  76   1              table[5] = DISPLAY_DATA_COMMAND;
  77   1              if(errcod)
  78   1              {
  79   2                      table[6] = 0x79;
  80   2                      table[7] = DISPLAY_TABLE_SEG(errcod);
  81   2                      table[8] = 0x00;
  82   2              }
  83   1              else
  84   1              {
  85   2                      if(s_bit == 0)
  86   2                      {
  87   3                              table[6] = 0xFF;
  88   3                              table[7] = 0xFF;
  89   3                              table[8] = 0x80;
  90   3                      }
  91   2                      else if(s_bit < 4)
  92   2                      {
  93   3                              table[6] = (s_bit == 1 ? 0x80 : 0x00);
  94   3                              table[7] = (s_bit == 2 ? 0x80 : 0x00);
  95   3                              table[8] = (s_bit == 3 ? 0x80 : 0x00);
  96   3                      }
  97   2                      else
  98   2                      {
  99   3                              table[6] = (0x01 << (s_bit - 4));
 100   3                              table[7] = (0x01 << (s_bit - 4));
 101   3                              table[8] = 0x00;
 102   3                      }
 103   2                      s_bit++;
 104   2                      if(s_bit > 10)
 105   2                              s_bit = 0;
 106   2              }
 107   1              table[9] = hal_alg_chk_crc8(table, 9);
 108   1              
 109   1              s_sequence++;
 110   1      }
 111          
 112          /*********************************************************************************************************
C51 COMPILER V9.01   XY_FML_TEST                                                           03/15/2021 13:22:03 PAGE 3   

             -**************
 113          * Function Name: 
 114          * Description  : 
 115          * Arguments    : None
 116          * Return Value : None
 117          **********************************************************************************************************
             -*************/
 118          void fml_test_uart(unsigned char mode)
 119          {
 120   1              static unsigned char s_table[16] = {0};
 121   1      
 122   1              switch(mode)
 123   1              {
 124   2                      case 0:                         ///< old protocol
 125   2                              fml_test_old_dis(s_table);
 126   2                      
 127   2                              hal_serial_uart_tx_display(s_table, 6);
 128   2                              break;
 129   2                      case 1:                         ///< new protocol
 130   2                              fml_test_new_dis(s_table);
 131   2                      
 132   2                              hal_serial_uart_tx_display(s_table, 10);
 133   2                              break;
 134   2                      case 2:
 135   2                              fml_test_old_dis(s_table);
 136   2                              fml_test_new_dis(s_table+6);
 137   2                                      
 138   2                              hal_serial_uart_tx_display(s_table, 16);
 139   2                              break;
 140   2                      default:
 141   2                              break;
 142   2              }
 143   1      }
 144          
 145          /*********************************************************************************************************
             -**************
 146          * Function Name: 
 147          * Description  : 
 148          * Arguments    : None
 149          * Return Value : None
 150          **********************************************************************************************************
             -*************/
 151          void fml_test_delay(void)
 152          {
 153   1              unsigned int i, j;
 154   1      
 155   1              watchdog();
 156   1              for(i=0; i<200; i++)
 157   1              {       
 158   2                      for(j=0; j<1000; j++)
 159   2                      {
 160   3                              ;
 161   3                      }
 162   2              }
 163   1              
 164   1              watchdog();
 165   1              fml_test_uart(errcod);
 166   1              
 167   1              for(i=0; i<200; i++)
 168   1              {
 169   2                      for(j=0; j<1000; j++)
 170   2                      {
C51 COMPILER V9.01   XY_FML_TEST                                                           03/15/2021 13:22:03 PAGE 4   

 171   3                              ;
 172   3                      }
 173   2              }
 174   1              
 175   1              watchdog();
 176   1      
 177   1      }
 178          
 179          /*********************************************************************************************************
             -**************
 180          * Function Name: 
 181          * Description  : 
 182          * Arguments    : None
 183          * Return Value : None
 184          **********************************************************************************************************
             -*************/
 185          void fml_test_port(void)
 186          {
 187   1              /*1*/
 188   1              #ifdef TEST_FUNC_NUMB_01
 189   1              PTC_on();
 190   1              fml_test_delay();
 191   1              PTC_off();
 192   1              #endif
 193   1      
 194   1              /*4*/
 195   1              #ifdef TEST_FUNC_NUMB_04
 196   1              blow_fan_on();
 197   1              fml_test_delay();
 198   1              blow_fan_off();
 199   1              #endif
 200   1      
 201   1              /*5*/
 202   1              #ifdef TEST_FUNC_NUMB_05
 203   1              light_on();
 204   1              fml_test_delay();
 205   1              light_off();
 206   1              #endif
 207   1              
 208   1      }
 209          
 210          /*********************************************************************************************************
             -**************
 211          * Function Name: 
 212          * Description  : 
 213          * Arguments    : None
 214          * Return Value : None
 215          **********************************************************************************************************
             -*************/
 216          void fml_test_motor(void)
 217          {
 218   1              /*6*/
 219   1              #ifdef TEST_FUNC_NUMB_06
 220   1              blow_motor_step4_on();
 221   1              fml_test_delay();
 222   1              blow_motor_step4_off();
 223   1              #endif
 224   1              
 225   1              /*7*/
 226   1              #ifdef TEST_FUNC_NUMB_07
 227   1              blow_motor_step3_on();
 228   1              fml_test_delay();
C51 COMPILER V9.01   XY_FML_TEST                                                           03/15/2021 13:22:03 PAGE 5   

 229   1              blow_motor_step3_off();
 230   1              #endif
 231   1              
 232   1              /*8*/
 233   1              #ifdef TEST_FUNC_NUMB_08
 234   1              blow_motor_step2_on();
 235   1              fml_test_delay();
 236   1              blow_motor_step2_off();
 237   1              #endif
 238   1      
 239   1              /*9*/
 240   1              #ifdef TEST_FUNC_NUMB_09
 241   1              blow_motor_step1_on();
 242   1              fml_test_delay();
 243   1              blow_motor_step1_off();
 244   1              #endif
 245   1              
 246   1              /*10*/
 247   1              #ifdef TEST_FUNC_NUMB_10
 248   1              absorb_motor_step4_on();
 249   1              fml_test_delay();
 250   1              absorb_motor_step4_off();
 251   1              #endif
 252   1              
 253   1              /*11*/
 254   1              #ifdef TEST_FUNC_NUMB_11
 255   1              absorb_motor_step3_on();
 256   1              fml_test_delay();
 257   1              absorb_motor_step3_off();
 258   1              #endif
 259   1      
 260   1              /*12*/
 261   1              #ifdef TEST_FUNC_NUMB_12
 262   1              absorb_motor_step2_on();
 263   1              fml_test_delay();
 264   1              absorb_motor_step2_off();
 265   1              #endif
 266   1      
 267   1              /*13*/
 268   1              #ifdef TEST_FUNC_NUMB_13
 269   1              absorb_motor_step1_on();
 270   1              fml_test_delay();
 271   1              absorb_motor_step1_off();
 272   1              #endif
 273   1      
 274   1      }
 275          
 276          /*********************************************************************************************************
             -**************
 277          * Function Name: 
 278          * Description  : 
 279          * Arguments    : None
 280          * Return Value : None
 281          **********************************************************************************************************
             -*************/
 282          void fml_test_temp(datall* p_data)
 283          {
 284   1              unsigned int timeout = 0;
 285   1              
 286   1              while(1)
 287   1              {
 288   2                      if(p_data->uart.rec_uart1_ok)
C51 COMPILER V9.01   XY_FML_TEST                                                           03/15/2021 13:22:03 PAGE 6   

 289   2                      {
 290   3                              break;
 291   3                      }
 292   2                      timeout++;
 293   2                      if(timeout > 60000)
 294   2                      {
 295   3                              timeout = 60000;
 296   3                      }
 297   2                      watchdog();
 298   2              }
 299   1              if(p_data->temperature.value == 0)                      ///< short circuit
 300   1              {
 301   2                      errcod = 1;
 302   2              }
 303   1              else if(p_data->temperature.value > 80)         ///< cut circuit
 304   1              {
 305   2                      errcod = 2;
 306   2              }
 307   1              else if(timeout == 60000)                                       ///< lost uart from display
 308   1              {
 309   2                      errcod = 3;
 310   2              }
 311   1              else
 312   1              {
 313   2                      errcod = 0;
 314   2              }
 315   1      }
 316          
 317          /*********************************************************************************************************
             -**************
 318          * Function Name: 
 319          * Description  : 
 320          * Arguments    : None
 321          * Return Value : None
 322          **********************************************************************************************************
             -*************/
 323          void fml_test_init(void)
 324          {       
 325   1              blow_fan_off();
 326   1              light_off();
 327   1              absorb_fan_off();
 328   1              PTC_off();
 329   1      
 330   1              blow_motor_step1_off();
 331   1              blow_motor_step2_off();
 332   1              blow_motor_step3_off();
 333   1              blow_motor_step4_off();
 334   1              
 335   1              absorb_motor_step1_off();
 336   1              absorb_motor_step2_off();
 337   1              absorb_motor_step3_off();
 338   1              absorb_motor_step4_off();
 339   1      
 340   1      }
 341          
 342          /*********************************************************************************************************
             -**************
 343          * Function Name: 
 344          * Description  : 
 345          * Arguments    : None
 346          * Return Value : None
 347          **********************************************************************************************************
C51 COMPILER V9.01   XY_FML_TEST                                                           03/15/2021 13:22:03 PAGE 7   

             -*************/
 348          switchstate fml_test_check(void) 
 349          {
 350   1              static unsigned char s_count = 0;
 351   1              
 352   1              if(self_test() == 0)
 353   1              {
 354   2                      s_count++;
 355   2                      if(s_count > 2)
 356   2                      {
 357   3                              fml_test_init();
 358   3                              return YES;
 359   3                      }
 360   2              }
 361   1              else
 362   1              {
 363   2                      s_count = 0;
 364   2              }
 365   1              return NO;
 366   1      }
 367          
 368          /*********************************************************************************************************
             -**************
 369          * Function Name: 
 370          * Description  : 
 371          * Arguments    : None
 372          * Return Value : None
 373          **********************************************************************************************************
             -*************/
 374          void fml_test_logic(datall* p_data)
 375          {
 376   1              static unsigned char s_step = 0;
 377   1      
 378   1              if(YES == p_data->testmode)
 379   1              {
 380   2                      watchdog();
 381   2      
 382   2                      switch(s_step)
 383   2                      {
 384   3                              case 0:
 385   3                                      s_step++;
 386   3                                      p_data->buzzer.burn_bee_on = ON;        
 387   3                                      fml_test_uart(2);
 388   3                                      fml_test_temp(p_data);
 389   3                                      break;
 390   3                              case 1:
 391   3                                      if(OFF == p_data->buzzer.burn_bee_on)   ///< start test beep
 392   3                                      {
 393   4                                              fml_test_port();
 394   4                                              fml_test_motor();
 395   4                                              s_step = 0;
 396   4                                      }
 397   3                                      break;
 398   3                              default:
 399   3                                      break;
 400   3                      }
 401   2              }       
 402   1      }
 403          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.01   XY_FML_TEST                                                           03/15/2021 13:22:03 PAGE 8   

   CODE SIZE        =   1383    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
