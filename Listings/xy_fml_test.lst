C51 COMPILER V9.01   XY_FML_TEST                                                           03/18/2021 14:17:24 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XY_FML_TEST
OBJECT MODULE PLACED IN .\Objects\xy_fml_test.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE 02_FML\xy_fml_test.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\01_APL;.\
                    -02_FML;.\03_HAL;.\04_SYS) DEBUG PRINT(.\Listings\xy_fml_test.lst) OBJECT(.\Objects\xy_fml_test.obj)

line level    source

   1          #include "xy_sys_headfile.h"
   2          
   3          static unsigned char  errcod;
   4          
   5          /*********************************************************************************************************
             -**************
   6          * Function Name: 
   7          * Description  : 
   8          * Arguments    : None
   9          * Return Value : None
  10          **********************************************************************************************************
             -*************/
  11          void fml_test_old_dis(unsigned char* table)
  12          {
  13   1              static unsigned char s_bit = 0; 
  14   1      
  15   1              table[0] = 0x68;
  16   1              table[1] = 0x02;
  17   1              switch(errcod)
  18   1              {
  19   2                      case 0:
  20   2                              if(s_bit == 0)
  21   2                              {
  22   3                                      table[2] = 0x07;
  23   3                                      table[3] = 0x7F;
  24   3                              }
  25   2                              else
  26   2                              {
  27   3                                      table[2] = s_bit <  4 ? 0x01 << (s_bit-1) : 0x00;
  28   3                                      table[3] = s_bit >= 4 ? 0x01 << (s_bit-4) : 0x00;
  29   3                              }
  30   2                              s_bit++;
  31   2                              if(s_bit > 10)
  32   2                                      s_bit = 0;
  33   2                              break;
  34   2                      case 1:
  35   2                              table[2] = 0x00;
  36   2                              table[3] = 0x5C;
  37   2                              break;
  38   2                      case 2:
  39   2                              table[2] = 0x00;
  40   2                              table[3] = 0x7C;
  41   2                              break;
  42   2                      case 3:
  43   2                              table[2] = 0x00;
  44   2                              table[3] = 0x58;
  45   2                              break;
  46   2                      case 4:
  47   2                              table[2] = 0x07;
  48   2                              table[3] = 0x7F;
  49   2                              s_bit = 0;
  50   2                              break;
  51   2                      default:
  52   2                              table[2] = 0x00;
C51 COMPILER V9.01   XY_FML_TEST                                                           03/18/2021 14:17:24 PAGE 2   

  53   2                              table[3] = 0x00;
  54   2                              break;
  55   2              }
  56   1              table[4] = table[0] + table[1] + table[2] + table[3];
  57   1              table[5] = 0x16;        
  58   1      }
  59          
  60          /*********************************************************************************************************
             -**************
  61          * Function Name: 
  62          * Description  : 
  63          * Arguments    : None
  64          * Return Value : None
  65          **********************************************************************************************************
             -*************/
  66          void fml_test_new_dis(unsigned char* table)
  67          {
  68   1              static unsigned char s_bit = 0; 
  69   1              static unsigned char s_sequence = 0;
  70   1      
  71   1              table[0] = DISPLAY_DATA_HEAD_XY >> 8 & 0xFF;
  72   1              table[1] = DISPLAY_DATA_HEAD_XY & 0xFF;
  73   1              table[2] = DISPLAY_DATA_LENGTH;
  74   1              table[3] = DISPLAY_DATA_VERSION;
  75   1              table[4] = s_sequence;
  76   1              table[5] = DISPLAY_DATA_COMMAND;
  77   1              if(errcod)
  78   1              {
  79   2                      table[6] = 0x79;
  80   2                      table[7] = DISPLAY_TABLE_SEG(errcod);
  81   2                      table[8] = 0x00;
  82   2              }
  83   1              else
  84   1              {
  85   2                      if(s_bit == 0)
  86   2                      {
  87   3                              table[6] = 0xFF;
  88   3                              table[7] = 0xFF;
  89   3                              table[8] = 0x80;
  90   3                      }
  91   2                      else if(s_bit < 4)
  92   2                      {
  93   3                              table[6] = (s_bit == 1 ? 0x80 : 0x00);
  94   3                              table[7] = (s_bit == 2 ? 0x80 : 0x00);
  95   3                              table[8] = (s_bit == 3 ? 0x80 : 0x00);
  96   3                      }
  97   2                      else
  98   2                      {
  99   3                              table[6] = (0x01 << (s_bit - 4));
 100   3                              table[7] = (0x01 << (s_bit - 4));
 101   3                              table[8] = 0x00;
 102   3                      }
 103   2                      s_bit++;
 104   2                      if(s_bit > 10)
 105   2                              s_bit = 0;
 106   2              }
 107   1              table[9] = hal_alg_chk_crc8(table, 9);  
 108   1              s_sequence++;
 109   1      }
 110          
 111          /*********************************************************************************************************
             -**************
C51 COMPILER V9.01   XY_FML_TEST                                                           03/18/2021 14:17:24 PAGE 3   

 112          * Function Name: 
 113          * Description  : 
 114          * Arguments    : None
 115          * Return Value : None
 116          **********************************************************************************************************
             -*************/
 117          void fml_test_uart(unsigned char mode)
 118          {
 119   1              static unsigned char s_table[16] = {0};
 120   1      
 121   1              switch(mode)
 122   1              {
 123   2                      case 0:                         ///< old protocol
 124   2                              fml_test_old_dis(s_table);
 125   2                      
 126   2                              hal_serial_uart_tx_display(s_table, 6);
 127   2                              break;
 128   2                      case 1:                         ///< new protocol
 129   2                              fml_test_new_dis(s_table);
 130   2                      
 131   2                              hal_serial_uart_tx_display(s_table, 10);
 132   2                              break;
 133   2                      case 2:
 134   2                              fml_test_old_dis(s_table);
 135   2                              fml_test_new_dis(s_table+6);
 136   2                                      
 137   2                              hal_serial_uart_tx_display(s_table, 16);
 138   2                              break;
 139   2                      default:
 140   2                              break;
 141   2              }
 142   1      }
 143          
 144          /*********************************************************************************************************
             -**************
 145          * Function Name: 
 146          * Description  : 
 147          * Arguments    : None
 148          * Return Value : None
 149          **********************************************************************************************************
             -*************/
 150          void fml_test_delay(void)
 151          {
 152   1              unsigned int i, j;
 153   1      
 154   1              watchdog();
 155   1              for(i=0; i<200; i++)
 156   1              {       
 157   2                      for(j=0; j<1000; j++)
 158   2                      {
 159   3                              ;
 160   3                      }
 161   2              }
 162   1              watchdog();
 163   1              fml_test_uart(errcod);  
 164   1              for(i=0; i<200; i++)
 165   1              {
 166   2                      for(j=0; j<1000; j++)
 167   2                      {
 168   3                              ;
 169   3                      }
 170   2              }       
C51 COMPILER V9.01   XY_FML_TEST                                                           03/18/2021 14:17:24 PAGE 4   

 171   1              watchdog();
 172   1      }
 173          
 174          /*********************************************************************************************************
             -**************
 175          * Function Name: 
 176          * Description  : 
 177          * Arguments    : None
 178          * Return Value : None
 179          **********************************************************************************************************
             -*************/
 180          void fml_test_port(void)
 181          {
 182   1              /*1*/
 183   1              #ifdef TEST_FUNC_NUMB_01
 184   1              PTC_on();
 185   1              fml_test_delay();
 186   1              PTC_off();
 187   1              #endif
 188   1      
 189   1              /*2*/
 190   1              #ifdef TEST_FUNC_NUMB_02
 191   1              rav_on();
 192   1              fml_test_delay();
 193   1              rav_off();
 194   1              #endif
 195   1      
 196   1              /*4*/
 197   1              #ifdef TEST_FUNC_NUMB_04
 198   1              blow_fan_on();
 199   1              fml_test_delay();
 200   1              blow_fan_off();
 201   1              #endif
 202   1      
 203   1              /*5*/
 204   1              #ifdef TEST_FUNC_NUMB_05
 205   1              light_on();
 206   1              fml_test_delay();
 207   1              light_off();
 208   1              #endif
 209   1              
 210   1      }
 211          
 212          /*********************************************************************************************************
             -**************
 213          * Function Name: 
 214          * Description  : 
 215          * Arguments    : None
 216          * Return Value : None
 217          **********************************************************************************************************
             -*************/
 218          void fml_test_motor(void)
 219          {
 220   1              /*6*/
 221   1              #ifdef TEST_FUNC_NUMB_06
 222   1              blow_motor_step4_on();
 223   1              fml_test_delay();
 224   1              blow_motor_step4_off();
 225   1              #endif
 226   1              
 227   1              /*7*/
 228   1              #ifdef TEST_FUNC_NUMB_07
C51 COMPILER V9.01   XY_FML_TEST                                                           03/18/2021 14:17:24 PAGE 5   

 229   1              blow_motor_step3_on();
 230   1              fml_test_delay();
 231   1              blow_motor_step3_off();
 232   1              #endif
 233   1              
 234   1              /*8*/
 235   1              #ifdef TEST_FUNC_NUMB_08
 236   1              blow_motor_step2_on();
 237   1              fml_test_delay();
 238   1              blow_motor_step2_off();
 239   1              #endif
 240   1      
 241   1              /*9*/
 242   1              #ifdef TEST_FUNC_NUMB_09
 243   1              blow_motor_step1_on();
 244   1              fml_test_delay();
 245   1              blow_motor_step1_off();
 246   1              #endif
 247   1      
 248   1      //      /*14*/
 249   1      //      #ifdef TEST_FUNC_NUMB_14
 250   1      //      fml_test_delay();
 251   1      //      #endif
 252   1      //      
 253   1      //      /*15*/
 254   1      //      #ifdef TEST_FUNC_NUMB_15
 255   1      //      fml_test_delay();
 256   1      //      #endif
 257   1      }
 258          
 259          /*********************************************************************************************************
             -**************
 260          * Function Name: 
 261          * Description  : 
 262          * Arguments    : None
 263          * Return Value : None
 264          **********************************************************************************************************
             -*************/
 265          void fml_test_temp(datall* p_data)
 266          {
 267   1              unsigned int timeout = 0;
 268   1              
 269   1              while(1)
 270   1              {
 271   2                      if(p_data->uart.rec_uart1_ok)
 272   2                      {
 273   3                              break;
 274   3                      }
 275   2                      timeout++;
 276   2                      if(timeout > 60000)
 277   2                      {
 278   3                              timeout = 60000;
 279   3                      }
 280   2                      watchdog();
 281   2              }
 282   1              if(p_data->temperature.value == 0)                      ///< short circuit
 283   1              {
 284   2                      errcod = 1;
 285   2              }
 286   1              else if(p_data->temperature.value > 80)         ///< cut circuit
 287   1              {
 288   2                      errcod = 2;
C51 COMPILER V9.01   XY_FML_TEST                                                           03/18/2021 14:17:24 PAGE 6   

 289   2              }
 290   1              else if(timeout == 60000)                                       ///< lost uart from display
 291   1              {
 292   2                      errcod = 3;
 293   2              }
 294   1              else
 295   1              {
 296   2                      errcod = 0;
 297   2              }
 298   1      }
 299          
 300          /*********************************************************************************************************
             -**************
 301          * Function Name: 
 302          * Description  : 
 303          * Arguments    : None
 304          * Return Value : None
 305          **********************************************************************************************************
             -*************/
 306          void fml_test_init(void)
 307          {       
 308   1              blow_fan_off();
 309   1              light_off();
 310   1              absorb_fan_off();       
 311   1              rav_off();
 312   1              PTC_off();
 313   1      
 314   1              blow_motor_step1_off();
 315   1              blow_motor_step2_off();
 316   1              blow_motor_step3_off();
 317   1              blow_motor_step4_off();
 318   1      }
 319          
 320          /*********************************************************************************************************
             -**************
 321          * Function Name: 
 322          * Description  : 
 323          * Arguments    : None
 324          * Return Value : None
 325          **********************************************************************************************************
             -*************/
 326          switchstate fml_test_check(void) 
 327          {
 328   1              static unsigned char s_count = 0;
 329   1              
 330   1              if(self_test() == 0)
 331   1              {
 332   2                      s_count++;
 333   2                      if(s_count > 2)
 334   2                      {
 335   3                              fml_test_init();
 336   3                              return YES;
 337   3                      }
 338   2              }
 339   1              else
 340   1              {
 341   2                      s_count = 0;
 342   2              }
 343   1              return NO;
 344   1      }
 345          
 346          /*********************************************************************************************************
C51 COMPILER V9.01   XY_FML_TEST                                                           03/18/2021 14:17:24 PAGE 7   

             -**************
 347          * Function Name: 
 348          * Description  : 
 349          * Arguments    : None
 350          * Return Value : None
 351          **********************************************************************************************************
             -*************/
 352          void fml_test_logic(datall* p_data)
 353          {
 354   1              static unsigned char s_step = 0;
 355   1      
 356   1              if(YES == p_data->testmode)
 357   1              {
 358   2                      watchdog();
 359   2                      switch(s_step)
 360   2                      {
 361   3                              case 0:
 362   3                                      s_step++;
 363   3                                      p_data->buzzer.burn_bee_on = ON;        
 364   3                                      fml_test_uart(2);
 365   3                                      fml_test_temp(p_data);
 366   3                                      break;
 367   3                              case 1:
 368   3                                      if(OFF == p_data->buzzer.burn_bee_on)   ///< start test beep
 369   3                                      {
 370   4                                              fml_test_port();
 371   4                                              fml_test_motor();
 372   4                                              s_step = 0;
 373   4                                      }
 374   3                                      break;
 375   3                              default:
 376   3                                      break;
 377   3                      }
 378   2              }       
 379   1      }
 380          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1356    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
