C51 COMPILER V9.01   XY_FML_TEST                                                           03/17/2021 13:19:58 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XY_FML_TEST
OBJECT MODULE PLACED IN .\Objects\xy_fml_test.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE 02_FML\xy_fml_test.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\01_APL;.\
                    -02_FML;.\03_HAL;.\04_SYS) DEBUG PRINT(.\Listings\xy_fml_test.lst) OBJECT(.\Objects\xy_fml_test.obj)

line level    source

   1          #include "xy_sys_headfile.h"
   2          
   3          static unsigned char  errcod;
   4          
   5          /*********************************************************************************************************
             -**************
   6          * Function Name: 
   7          * Description  : 
   8          * Arguments    : None
   9          * Return Value : None
  10          **********************************************************************************************************
             -*************/
  11          void fml_test_old_dis(unsigned char* table)
  12          {
  13   1              static unsigned char s_bit = 0; 
  14   1      
  15   1              table[0] = 0x68;
  16   1              table[1] = 0x02;
  17   1              switch(errcod)
  18   1              {
  19   2                      case 0:
  20   2                              if(s_bit == 0)
  21   2                              {
  22   3                                      table[2] = 0x07;
  23   3                                      table[3] = 0x7F;
  24   3                              }
  25   2                              else
  26   2                              {
  27   3                                      table[2] = s_bit <  4 ? 0x01 << (s_bit-1) : 0x00;
  28   3                                      table[3] = s_bit >= 4 ? 0x01 << (s_bit-4) : 0x00;
  29   3                              }
  30   2                              s_bit++;
  31   2                              if(s_bit > 10)
  32   2                                      s_bit = 0;
  33   2                              break;
  34   2                      case 1:
  35   2                              table[2] = 0x00;
  36   2                              table[3] = 0x5C;
  37   2                              break;
  38   2                      case 2:
  39   2                              table[2] = 0x00;
  40   2                              table[3] = 0x7C;
  41   2                              break;
  42   2                      case 3:
  43   2                              table[2] = 0x00;
  44   2                              table[3] = 0x58;
  45   2                              break;
  46   2                      case 4:
  47   2                              table[2] = 0x07;
  48   2                              table[3] = 0x7F;
  49   2                              s_bit = 0;
  50   2                              break;
  51   2                      default:
  52   2                              table[2] = 0x00;
C51 COMPILER V9.01   XY_FML_TEST                                                           03/17/2021 13:19:58 PAGE 2   

  53   2                              table[3] = 0x00;
  54   2                              break;
  55   2              }
  56   1              table[4] = table[0] + table[1] + table[2] + table[3];
  57   1              table[5] = 0x16;        
  58   1      }
  59          
  60          /*********************************************************************************************************
             -**************
  61          * Function Name: 
  62          * Description  : 
  63          * Arguments    : None
  64          * Return Value : None
  65          **********************************************************************************************************
             -*************/
  66          void fml_test_new_dis(unsigned char* table)
  67          {
  68   1              static unsigned char s_bit = 0; 
  69   1              static unsigned char s_sequence = 0;
  70   1      
  71   1              table[0] = DISPLAY_DATA_HEAD_XY >> 8 & 0xFF;
  72   1              table[1] = DISPLAY_DATA_HEAD_XY & 0xFF;
  73   1              table[2] = DISPLAY_DATA_LENGTH;
  74   1              table[3] = DISPLAY_DATA_VERSION;
  75   1              table[4] = s_sequence;
  76   1              table[5] = DISPLAY_DATA_COMMAND;
  77   1              if(errcod)
  78   1              {
  79   2                      table[6] = 0x79;
  80   2                      table[7] = DISPLAY_TABLE_SEG(errcod);
  81   2                      table[8] = 0x00;
  82   2              }
  83   1              else
  84   1              {
  85   2                      if(s_bit == 0)
  86   2                      {
  87   3                              table[6] = 0xFF;
  88   3                              table[7] = 0xFF;
  89   3                              table[8] = 0x80;
  90   3                      }
  91   2                      else if(s_bit < 4)
  92   2                      {
  93   3                              table[6] = (s_bit == 1 ? 0x80 : 0x00);
  94   3                              table[7] = (s_bit == 2 ? 0x80 : 0x00);
  95   3                              table[8] = (s_bit == 3 ? 0x80 : 0x00);
  96   3                      }
  97   2                      else
  98   2                      {
  99   3                              table[6] = (0x01 << (s_bit - 4));
 100   3                              table[7] = (0x01 << (s_bit - 4));
 101   3                              table[8] = 0x00;
 102   3                      }
 103   2                      s_bit++;
 104   2                      if(s_bit > 10)
 105   2                              s_bit = 0;
 106   2              }
 107   1              table[9] = hal_alg_chk_crc8(table, 9);  
 108   1              s_sequence++;
 109   1      }
 110          
 111          /*********************************************************************************************************
             -**************
C51 COMPILER V9.01   XY_FML_TEST                                                           03/17/2021 13:19:58 PAGE 3   

 112          * Function Name: 
 113          * Description  : 
 114          * Arguments    : None
 115          * Return Value : None
 116          **********************************************************************************************************
             -*************/
 117          void fml_test_uart(unsigned char mode)
 118          {
 119   1              static unsigned char s_table[16] = {0};
 120   1      
 121   1              switch(mode)
 122   1              {
 123   2                      case 0:                         ///< old protocol
 124   2                              fml_test_old_dis(s_table);
 125   2                      
 126   2                              hal_serial_uart_tx_display(s_table, 6);
 127   2                              break;
 128   2                      case 1:                         ///< new protocol
 129   2                              fml_test_new_dis(s_table);
 130   2                      
 131   2                              hal_serial_uart_tx_display(s_table, 10);
 132   2                              break;
 133   2                      case 2:
 134   2                              fml_test_old_dis(s_table);
 135   2                              fml_test_new_dis(s_table+6);
 136   2                                      
 137   2                              hal_serial_uart_tx_display(s_table, 16);
 138   2                              break;
 139   2                      default:
 140   2                              break;
 141   2              }
 142   1      }
 143          
 144          /*********************************************************************************************************
             -**************
 145          * Function Name: 
 146          * Description  : 
 147          * Arguments    : None
 148          * Return Value : None
 149          **********************************************************************************************************
             -*************/
 150          void fml_test_delay(void)
 151          {
 152   1              unsigned int i, j;
 153   1      
 154   1              watchdog();
 155   1              for(i=0; i<200; i++)
 156   1              {       
 157   2                      for(j=0; j<1000; j++)
 158   2                      {
 159   3                              ;
 160   3                      }
 161   2              }
 162   1              watchdog();
 163   1              fml_test_uart(errcod);  
 164   1              for(i=0; i<200; i++)
 165   1              {
 166   2                      for(j=0; j<1000; j++)
 167   2                      {
 168   3                              ;
 169   3                      }
 170   2              }       
C51 COMPILER V9.01   XY_FML_TEST                                                           03/17/2021 13:19:58 PAGE 4   

 171   1              watchdog();
 172   1      }
 173          
 174          /*********************************************************************************************************
             -**************
 175          * Function Name: 
 176          * Description  : 
 177          * Arguments    : None
 178          * Return Value : None
 179          **********************************************************************************************************
             -*************/
 180          void fml_test_port(void)
 181          {
 182   1              /*1*/
 183   1              #ifdef TEST_FUNC_NUMB_01
 184   1              PTC_on();
 185   1              fml_test_delay();
 186   1              PTC_off();
 187   1              #endif
 188   1      
 189   1              /*4*/
 190   1              #ifdef TEST_FUNC_NUMB_04
 191   1              blow_fan_on();
 192   1              fml_test_delay();
 193   1              blow_fan_off();
 194   1              #endif
 195   1      
 196   1              /*5*/
 197   1              #ifdef TEST_FUNC_NUMB_05
 198   1              light_on();
 199   1              fml_test_delay();
 200   1              light_off();
 201   1              #endif
 202   1              
 203   1      }
 204          
 205          /*********************************************************************************************************
             -**************
 206          * Function Name: 
 207          * Description  : 
 208          * Arguments    : None
 209          * Return Value : None
 210          **********************************************************************************************************
             -*************/
 211          void fml_test_motor(void)
 212          {
 213   1              /*6*/
 214   1              #ifdef TEST_FUNC_NUMB_06
 215   1              blow_motor_step4_on();
 216   1              fml_test_delay();
 217   1              blow_motor_step4_off();
 218   1              #endif
 219   1              
 220   1              /*7*/
 221   1              #ifdef TEST_FUNC_NUMB_07
 222   1              blow_motor_step3_on();
 223   1              fml_test_delay();
 224   1              blow_motor_step3_off();
 225   1              #endif
 226   1              
 227   1              /*8*/
 228   1              #ifdef TEST_FUNC_NUMB_08
C51 COMPILER V9.01   XY_FML_TEST                                                           03/17/2021 13:19:58 PAGE 5   

 229   1              blow_motor_step2_on();
 230   1              fml_test_delay();
 231   1              blow_motor_step2_off();
 232   1              #endif
 233   1      
 234   1              /*9*/
 235   1              #ifdef TEST_FUNC_NUMB_09
 236   1              blow_motor_step1_on();
 237   1              fml_test_delay();
 238   1              blow_motor_step1_off();
 239   1              #endif
 240   1              
 241   1              /*10*/
 242   1              #ifdef TEST_FUNC_NUMB_10
 243   1              absorb_motor_step4_on();
 244   1              fml_test_delay();
 245   1              absorb_motor_step4_off();
 246   1              #endif
 247   1              
 248   1              /*11*/
 249   1              #ifdef TEST_FUNC_NUMB_11
 250   1              absorb_motor_step3_on();
 251   1              fml_test_delay();
 252   1              absorb_motor_step3_off();
 253   1              #endif
 254   1      
 255   1              /*12*/
 256   1              #ifdef TEST_FUNC_NUMB_12
 257   1              absorb_motor_step2_on();
 258   1              fml_test_delay();
 259   1              absorb_motor_step2_off();
 260   1              #endif
 261   1      
 262   1              /*13*/
 263   1              #ifdef TEST_FUNC_NUMB_13
 264   1              absorb_motor_step1_on();
 265   1              fml_test_delay();
 266   1              absorb_motor_step1_off();
 267   1              #endif
 268   1      }
 269          
 270          /*********************************************************************************************************
             -**************
 271          * Function Name: 
 272          * Description  : 
 273          * Arguments    : None
 274          * Return Value : None
 275          **********************************************************************************************************
             -*************/
 276          void fml_test_temp(datall* p_data)
 277          {
 278   1              unsigned int timeout = 0;
 279   1              
 280   1              while(1)
 281   1              {
 282   2                      if(p_data->uart.rec_uart1_ok)
 283   2                      {
 284   3                              break;
 285   3                      }
 286   2                      timeout++;
 287   2                      if(timeout > 60000)
 288   2                      {
C51 COMPILER V9.01   XY_FML_TEST                                                           03/17/2021 13:19:58 PAGE 6   

 289   3                              timeout = 60000;
 290   3                      }
 291   2                      watchdog();
 292   2              }
 293   1              if(p_data->temperature.value == 0)                      ///< short circuit
 294   1              {
 295   2                      errcod = 1;
 296   2              }
 297   1              else if(p_data->temperature.value > 80)         ///< cut circuit
 298   1              {
 299   2                      errcod = 2;
 300   2              }
 301   1              else if(timeout == 60000)                                       ///< lost uart from display
 302   1              {
 303   2                      errcod = 3;
 304   2              }
 305   1              else
 306   1              {
 307   2                      errcod = 0;
 308   2              }
 309   1      }
 310          
 311          /*********************************************************************************************************
             -**************
 312          * Function Name: 
 313          * Description  : 
 314          * Arguments    : None
 315          * Return Value : None
 316          **********************************************************************************************************
             -*************/
 317          void fml_test_init(void)
 318          {       
 319   1              blow_fan_off();
 320   1              light_off();
 321   1              absorb_fan_off();
 322   1              PTC_off();
 323   1      
 324   1              blow_motor_step1_off();
 325   1              blow_motor_step2_off();
 326   1              blow_motor_step3_off();
 327   1              blow_motor_step4_off();
 328   1              
 329   1              absorb_motor_step1_off();
 330   1              absorb_motor_step2_off();
 331   1              absorb_motor_step3_off();
 332   1              absorb_motor_step4_off();
 333   1      }
 334          
 335          /*********************************************************************************************************
             -**************
 336          * Function Name: 
 337          * Description  : 
 338          * Arguments    : None
 339          * Return Value : None
 340          **********************************************************************************************************
             -*************/
 341          switchstate fml_test_check(void) 
 342          {
 343   1              static unsigned char s_count = 0;
 344   1              
 345   1              if(self_test() == 0)
 346   1              {
C51 COMPILER V9.01   XY_FML_TEST                                                           03/17/2021 13:19:58 PAGE 7   

 347   2                      s_count++;
 348   2                      if(s_count > 2)
 349   2                      {
 350   3                              fml_test_init();
 351   3                              return YES;
 352   3                      }
 353   2              }
 354   1              else
 355   1              {
 356   2                      s_count = 0;
 357   2              }
 358   1              return NO;
 359   1      }
 360          
 361          /*********************************************************************************************************
             -**************
 362          * Function Name: 
 363          * Description  : 
 364          * Arguments    : None
 365          * Return Value : None
 366          **********************************************************************************************************
             -*************/
 367          void fml_test_logic(datall* p_data)
 368          {
 369   1              static unsigned char s_step = 0;
 370   1      
 371   1              if(YES == p_data->testmode)
 372   1              {
 373   2                      watchdog();
 374   2                      switch(s_step)
 375   2                      {
 376   3                              case 0:
 377   3                                      s_step++;
 378   3                                      p_data->buzzer.burn_bee_on = ON;        
 379   3                                      fml_test_uart(2);
 380   3                                      fml_test_temp(p_data);
 381   3                                      break;
 382   3                              case 1:
 383   3                                      if(OFF == p_data->buzzer.burn_bee_on)   ///< start test beep
 384   3                                      {
 385   4                                              fml_test_port();
 386   4                                              fml_test_motor();
 387   4                                              s_step = 0;
 388   4                                      }
 389   3                                      break;
 390   3                              default:
 391   3                                      break;
 392   3                      }
 393   2              }       
 394   1      }
 395          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1383    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     22      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.01   XY_FML_TEST                                                           03/17/2021 13:19:58 PAGE 8   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
