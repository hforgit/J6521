C51 COMPILER V9.01   XY_HAL_ISR                                                            03/17/2021 13:19:58 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XY_HAL_ISR
OBJECT MODULE PLACED IN .\Objects\xy_hal_isr.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE 03_HAL\xy_hal_isr.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\01_APL;.\0
                    -2_FML;.\03_HAL;.\04_SYS) DEBUG PRINT(.\Listings\xy_hal_isr.lst) OBJECT(.\Objects\xy_hal_isr.obj)

line level    source

   1          #include "xy_sys_headfile.h"
   2          
   3          static datall* s_p_data = &g_datall;
   4          
   5          /*********************************************************************************************************
             -**************
   6          * Function Name: 
   7          * Description  : 
   8          * Arguments    : None
   9          * Return Value : None
  10          **********************************************************************************************************
             -*************/
  11          void hal_irq_tim0_isr(void) interrupt 1
  12          {
  13   1              TH0 = 0xF8;
  14   1              TL0 = 0x90;             //f830: 63536    f860:63584
  15   1      
  16   1              g_timebase.isTrigInterrupt = 1;
  17   1              fml_buzzer_timer_ctrl(s_p_data);
  18   1      }
  19          
  20          /*********************************************************************************************************
             -**************
  21          * Function Name: 
  22          * Description  : 
  23          * Arguments    : None
  24          * Return Value : None
  25          **********************************************************************************************************
             -*************/
  26          void hal_irq_tim2_isr() interrupt 5
  27          {
  28   1              static unsigned char s_buff = 0;
  29   1              static unsigned char s_count = 0;
  30   1              
  31   1              TF2 = 0;   //溢出清零
  32   1              s_count++;
  33   1              if((s_count > 1) && ((s_count % 2) == 1))
  34   1              {       
  35   2                      s_buff >>= 1;
  36   2                      if(P05 == 1)
  37   2                      {
  38   3                              s_buff |= 0x80;
  39   3                      }
  40   2              }
  41   1              if(s_count >= 17)
  42   1              {       
  43   2                      s_count = 0;                            
  44   2                      INT2F |= 0x02; 
  45   2                      IE1 |= 0X08;      
  46   2                      TR2 = 0;          
  47   2                      RCAP2H=0xfc;     //溢出时间：时钟为Fsys，则12000*（1/Fsys）=0.5ms;
  48   2                      RCAP2L=0xbe;            
  49   2                      hal_serial_uart_rx_touch(s_buff);
  50   2              }
C51 COMPILER V9.01   XY_HAL_ISR                                                            03/17/2021 13:19:58 PAGE 2   

  51   1      }
  52          
  53          /*********************************************************************************************************
             -**************
  54          * Function Name: 
  55          * Description  : 
  56          * Arguments    : None
  57          * Return Value : None
  58          **********************************************************************************************************
             -*************/
  59          void hal_irq_uart1_isr(void) interrupt 7
  60          {
  61   1              if(SSCON0&0x02)    //发送标志位判断
  62   1              {
  63   2                      SSCON0 &= 0xFD;
  64   2                      s_p_data->uart.send_byte_ok = 1;
  65   2                      s_p_data->uart.send_uart1_ok = 1;               
  66   2          }
  67   1              if((SSCON0&0x01))  //接收标志位判断
  68   1              {
  69   2                      SSCON0 &= 0xFE;
  70   2                      hal_serial_uart_rx_display(SSDAT);
  71   2          }
  72   1      }
  73          
  74          /*********************************************************************************************************
             -**************
  75          * Function Name: 
  76          * Description  : 
  77          * Arguments    : None
  78          * Return Value : None
  79          **********************************************************************************************************
             -*************/
  80          void hal_irq_ex2_isr(void) interrupt 10
  81          {       
  82   1              IE1 &= 0XF7;
  83   1              INT2F = 0x00;
  84   1              TR2 = 1;
  85   1              RCAP2H=0xfc;             
  86   1              RCAP2L=0xbe;
  87   1      }
  88          
  89          /*********************************************************************************************************
             -**************
  90          * Function Name: 
  91          * Description  : 
  92          * Arguments    : None
  93          * Return Value : None
  94          **********************************************************************************************************
             -*************/
  95          void hal_irq_uart1_send(unsigned char* p_buffer, unsigned char length)
  96          {
  97   1              static unsigned char i = 0;
  98   1              static unsigned char s_count = 0;
  99   1              
 100   1              if(s_p_data->uart.send_data)
 101   1              {       
 102   2                      if(s_p_data->uart.send_byte_ok)
 103   2                      {
 104   3                              s_p_data->uart.send_byte_ok = 0;
 105   3                              SSDAT = p_buffer[i];
 106   3                              s_count = 0;
C51 COMPILER V9.01   XY_HAL_ISR                                                            03/17/2021 13:19:58 PAGE 3   

 107   3                              i++;
 108   3                              if(i >= length)
 109   3                              {
 110   4                                      i = 0;
 111   4                                      s_p_data->uart.send_data = 0;
 112   4                              }
 113   3                      }
 114   2                      else
 115   2                      {
 116   3                              s_count++;
 117   3                              if(s_count >= 200)
 118   3                              {
 119   4                                      s_p_data->uart.send_data = 0;
 120   4                              }
 121   3                      }
 122   2              }
 123   1              else
 124   1              {
 125   2                      i = 0;
 126   2                      s_count = 0;
 127   2                      s_p_data->uart.send_byte_ok = 1;
 128   2              }
 129   1      }
 130          
 131          /*********************************************************************************************************
             -**************
 132          * Function Name: 
 133          * Description  : 
 134          * Arguments    : None
 135          * Return Value : None
 136          **********************************************************************************************************
             -*************/
 137          void hal_irq_uart2_send(unsigned char* p_buffer, unsigned char length)
 138          {
 139   1              unsigned char i = 0;
 140   1      
 141   1              for(i=0; i<length; i++)
 142   1              {
 143   2                      SSDAT = p_buffer[i];
 144   2                      while(!s_p_data->uart.send_uart1_ok);
 145   2                      s_p_data->uart.send_uart1_ok = 0;
 146   2              }
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    548    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
