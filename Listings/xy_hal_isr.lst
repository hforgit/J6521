C51 COMPILER V9.01   XY_HAL_ISR                                                            03/27/2021 10:55:08 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE XY_HAL_ISR
OBJECT MODULE PLACED IN .\Objects\xy_hal_isr.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE 03_HAL\xy_hal_isr.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\01_APL;.\0
                    -2_FML;.\03_HAL;.\04_SYS) DEBUG PRINT(.\Listings\xy_hal_isr.lst) OBJECT(.\Objects\xy_hal_isr.obj)

line level    source

   1          #include "xy_sys_headfile.h"
   2          
   3          static datall* s_p_data = &g_datall;
   4          
   5          /*********************************************************************************************************
             -**************
   6          * Function Name: 
   7          * Description  : 
   8          * Arguments    : None
   9          * Return Value : None
  10          **********************************************************************************************************
             -*************/
  11          void hal_irq_tim0_isr(void) interrupt 1
  12          {
  13   1              TH0 = 0xF8;
  14   1              TL0 = 0x90;             //f830: 63536    f860:63584
  15   1              
  16   1              P10 = ~P10;
  17   1              
  18   1              g_timebase.isTrigInterrupt = 1;
  19   1              fml_buzzer_timer_ctrl(s_p_data);
  20   1      }
  21          
  22          /*********************************************************************************************************
             -**************
  23          * Function Name: 
  24          * Description  : 
  25          * Arguments    : None
  26          * Return Value : None
  27          **********************************************************************************************************
             -*************/
  28          void hal_irq_tim2_isr() interrupt 5
  29          {
  30   1              static unsigned char s_buff = 0;
  31   1              static unsigned char s_count = 0;
  32   1              
  33   1              TF2 = 0;   //溢出清零
  34   1              s_count++;
  35   1              if((s_count > 1) && ((s_count % 2) == 1))
  36   1              {       
  37   2                      s_buff >>= 1;
  38   2                      if(P05 == 1)
  39   2                      {
  40   3                              s_buff |= 0x80;
  41   3                      }
  42   2              }
  43   1              if(s_count >= 17)
  44   1              {       
  45   2                      s_count = 0;                            
  46   2                      INT2F |= 0x02; 
  47   2                      IE1 |= 0X08;      
  48   2                      TR2 = 0;          
  49   2                      RCAP2H=0xfc;     //溢出时间：时钟为Fsys，则12000*（1/Fsys）=0.5ms;
  50   2                      RCAP2L=0xbe;            
C51 COMPILER V9.01   XY_HAL_ISR                                                            03/27/2021 10:55:08 PAGE 2   

  51   2                      hal_serial_uart_rx_touch(s_buff);
  52   2              }
  53   1      }
  54          
  55          /*********************************************************************************************************
             -**************
  56          * Function Name: 
  57          * Description  : 
  58          * Arguments    : None
  59          * Return Value : None
  60          **********************************************************************************************************
             -*************/
  61          void hal_irq_uart1_isr(void) interrupt 7
  62          {
  63   1              if(SSCON0&0x02)    //发送标志位判断
  64   1              {
  65   2                      SSCON0 &= 0xFD;
  66   2                      s_p_data->uart.send_byte_ok = 1;
  67   2                      s_p_data->uart.send_uart1_ok = 1;               
  68   2          }
  69   1              if((SSCON0&0x01))  //接收标志位判断
  70   1              {
  71   2                      SSCON0 &= 0xFE;
  72   2                      hal_serial_uart_rx_display(SSDAT);
  73   2          }
  74   1      }
  75          
  76          /*********************************************************************************************************
             -**************
  77          * Function Name: 
  78          * Description  : 
  79          * Arguments    : None
  80          * Return Value : None
  81          **********************************************************************************************************
             -*************/
  82          void hal_irq_ex2_isr(void) interrupt 10
  83          {       
  84   1              IE1 &= 0XF7;
  85   1              INT2F = 0x00;
  86   1              TR2 = 1;
  87   1              RCAP2H=0xfc;             
  88   1              RCAP2L=0xbe;
  89   1      }
  90          
  91          /*********************************************************************************************************
             -**************
  92          * Function Name: 
  93          * Description  : 
  94          * Arguments    : None
  95          * Return Value : None
  96          **********************************************************************************************************
             -*************/
  97          void hal_irq_uart1_send(unsigned char* p_buffer, unsigned char length)
  98          {
  99   1              static unsigned char i = 0;
 100   1              static unsigned char s_count = 0;
 101   1              
 102   1              if(s_p_data->uart.send_data)
 103   1              {       
 104   2                      if(s_p_data->uart.send_byte_ok)
 105   2                      {
 106   3                              s_p_data->uart.send_byte_ok = 0;
C51 COMPILER V9.01   XY_HAL_ISR                                                            03/27/2021 10:55:08 PAGE 3   

 107   3                              SSDAT = p_buffer[i];
 108   3                              s_count = 0;
 109   3                              i++;
 110   3                              if(i >= length)
 111   3                              {
 112   4                                      i = 0;
 113   4                                      s_p_data->uart.send_data = 0;
 114   4                              }
 115   3                      }
 116   2                      else
 117   2                      {
 118   3                              s_count++;
 119   3                              if(s_count >= 200)
 120   3                              {
 121   4                                      s_p_data->uart.send_data = 0;
 122   4                              }
 123   3                      }
 124   2              }
 125   1              else
 126   1              {
 127   2                      i = 0;
 128   2                      s_count = 0;
 129   2                      s_p_data->uart.send_byte_ok = 1;
 130   2              }
 131   1      }
 132          
 133          /*********************************************************************************************************
             -**************
 134          * Function Name: 
 135          * Description  : 
 136          * Arguments    : None
 137          * Return Value : None
 138          **********************************************************************************************************
             -*************/
 139          void hal_irq_uart2_send(unsigned char* p_buffer, unsigned char length)
 140          {
 141   1              unsigned char i = 0;
 142   1      
 143   1              for(i=0; i<length; i++)
 144   1              {
 145   2                      SSDAT = p_buffer[i];
 146   2                      while(!s_p_data->uart.send_uart1_ok);
 147   2                      s_p_data->uart.send_uart1_ok = 0;
 148   2              }
 149   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    550    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
